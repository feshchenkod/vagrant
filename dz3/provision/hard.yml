---
- hosts: all
  gather_facts: false
  sudo: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
  - name: usermod
    command: "{{ item }}"
    with_items:
      - usermod -aG docker vagrant
  - name: isntall packages
    apt: update_cache=yes pkg={{ item }} state=present #allow_unauthenticated=yes
    with_items:
      - 'auditd'
  - name: audit.rules
    blockinfile:
      path: /etc/audit/rules.d/audit.rules
      block: |
        -w /usr/bin/docker -p wa
        -w /usr/bin/dockerd -p wa
        -w /var/lib/docker -p wa
        -w /etc/docker -p wa
        -w /lib/systemd/system/docker.service -p wa
        -w /lib/systemd/system/docker.socket -p wa
        -w /etc/default/docker -p wa
        -w /etc/docker/daemon.json -p wa
        -w /usr/bin/docker-containerd -p wa
        -w /usr/bin/containerd -k docker
        -w /usr/bin/docker-runc -p wa
  - name: mkdir policies
    file: path=/etc/docker/policies state=directory
  - name: auth.rego
    blockinfile:
      path: /etc/docker/policies/authz.rego
      block: |
        package docker.authz
        default allow = false
        allow {
            user_id := input.Headers["Authz-User"]
            user := users[user_id]
            not user.readOnly
        }
        allow {
            user_id := input.Headers["Authz-User"]
            users[user_id].readOnly
            input.Method == "GET"
        }
        users = {
            "bob": {"readOnly": true},
            "docker": {"readOnly": false},
        }
      create: yes
      marker: ""
  - name: Remove blank lines blockinfile put in
    lineinfile :
      path: /etc/docker/policies/authz.rego
      state: absent
      regexp: '^$'
  - name: add user authz
    lineinfile: line='{"HttpHeaders":{"Authz-User":"docker"}}' dest=/root/.docker/config.json create=yes
  - name: add user authz
    lineinfile: line='{"HttpHeaders":{"Authz-User":"docker"}}' dest=/home/vagrant/.docker/config.json create=yes owner=vagrant
  - name: daemon.json
    blockinfile:
      path: /etc/docker/daemon.json
      block: |
        {
            "icc": false,
            "userns-remap": "default",
            "live-restore": true,
            "userland-proxy": false,
            "no-new-privileges": true,
            "storage-driver": "overlay2",
            "log-driver": "syslog",
            "log-opts": {
              "syslog-address": "udp://127.0.0.1:514"}
        }
      create: yes
      marker: ""
  - name: Remove blank lines blockinfile put in
    lineinfile :
      path: /etc/docker/daemon.json
      state: absent
      regexp: '^$'
  - name: reload docker
    systemd:
      state: restarted
      name: docker
  - name: install docker auth plugin
    command: 'docker plugin install --grant-all-permissions --alias opa-docker-authz openpolicyagent/opa-docker-authz-v2:0.5 opa-args="-policy-file /etc/docker/policies/authz.rego"'
  - name: chmod
    command: chown -R vagrant:vagrant /home/vagrant/.docker
  - name: restart auditd
    systemd:
      state: restarted
      enabled: yes
      name: auditd
  - name: rsyslog.config
    lineinfile: line='module(load="imudp")' dest=/etc/rsyslog.conf
  - name: rsyslog.config
    lineinfile: line='module(load="imudp")' dest=/etc/rsyslog.conf
  - name: start rsyslog
    systemd:
      state: restarted
      enabled: yes
      name: rsyslog
  - name: Remove file
    file: path=/etc/docker/daemon.json state=absent
  - name: daemon.json
    blockinfile:
      path: /etc/docker/daemon.json
      block: |
        {
            "icc": false,
            "userns-remap": "default",
            "live-restore": true,
            "userland-proxy": false,
            "no-new-privileges": true,
            "storage-driver": "overlay2",
            "log-driver": "syslog",
            "log-opts": {
              "syslog-address": "udp://127.0.0.1:514"
            },
            "authorization-plugins": ["opa-docker-authz"]
        }
      create: yes
      marker: ""
  - name: Remove blank lines blockinfile put in
    lineinfile :
      path: /etc/docker/daemon.json
      state: absent
      regexp: '^$'
  - name: add env
    lineinfile: line='DOCKER_CONTENT_TRUST=1' dest=/etc/environment
  - name: reload docker
    systemd:
      state: restarted
      name: docker
